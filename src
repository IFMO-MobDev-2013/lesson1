package com.example.Android_2;

import android.app.Activity;
import android.content.Context;
import android.graphics.*;
import android.os.Bundle;
import android.os.SystemClock;
import android.view.View;

import java.util.Random;

public class MyActivity extends Activity {
    final int WIDTH = 240;
    final int HEIGHT = 320;

    int[] colors = new int[10];
    int[][] buf = new int[HEIGHT][WIDTH];
    Bitmap bitmap;
    Matrix matrix = new Matrix();
    Paint paint = new Paint();
    boolean first = true;
    int frames;

    class WhirlView extends View {
        public WhirlView(Context context) {
            super(context);
        }

        @Override
        public void onDraw(Canvas canvas) {
            if (first) {
                matrix.setScale((float) canvas.getWidth() / WIDTH, (float) canvas.getHeight() / HEIGHT);
                first = false;
            }
            canvas.drawBitmap(bitmap, matrix, paint);

            for (int i = 0; i < HEIGHT; i++) {
                for (int j = 0; j < WIDTH; j++) {
                    int k = buf[i][j] + 1;
                    if (k == 10) {
                        k = 0;
                    }
                    if (buf[(i - 1 < 0) ? HEIGHT - 1 : i - 1][(j - 1 < 0) ? WIDTH - 1 : j - 1] == k
                            || buf[i][(j - 1 < 0) ? WIDTH - 1 : j - 1] == k
                            || buf[(i + 1 >= HEIGHT) ? 0 : i + 1][(j - 1 < 0) ? WIDTH - 1 : j - 1] == k
                            || buf[(i - 1 < 0) ? HEIGHT - 1 : i - 1][j] == k
                            || buf[(i + 1 >= HEIGHT) ? 0 : i + 1][j] == k
                            || buf[(i - 1 < 0) ? HEIGHT - 1 : i - 1][(j + 1 >= WIDTH) ? 0 : j + 1] == k
                            || buf[i][(j + 1 >= WIDTH) ? 0 : j + 1] == k
                            || buf[(i + 1 >= HEIGHT) ? 0 : i + 1][(j + 1 >= WIDTH) ? 0 : j + 1] == k) {

                        buf[i][j] = k;
                        bitmap.setPixel(j, i, colors[k]);
                    }
                }
            }

            canvas.drawText(Long.toString(1000 * (frames++) / SystemClock.currentThreadTimeMillis()) + " FPS", 50, 80, paint);
            invalidate();
        }
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        colors[0] = 0xff000000;
        colors[1] = 0xff888888;
        colors[2] = 0xffffffff;
        colors[3] = 0xffffff00;
        colors[4] = 0xffff00ff;
        colors[5] = 0xff00ffff;
        colors[6] = 0xff0000ff;
        colors[7] = 0xff00ff00;
        colors[8] = 0xffff0000;
        colors[9] = 0xffff8800;

        paint.setARGB(255, 0, 0, 0);
        paint.setTextSize(50);
        bitmap = Bitmap.createBitmap(WIDTH, HEIGHT, Bitmap.Config.RGB_565);
        Random rand = new Random();
        for (int i = 0; i < HEIGHT; i++) {
            for (int j = 0; j < WIDTH; j++) {
                buf[i][j] = rand.nextInt(10);
                bitmap.setPixel(j, i, colors[buf[i][j]]);
            }
        }

        super.onCreate(savedInstanceState);
        setContentView(new WhirlView(this));
    }
}
